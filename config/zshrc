#!/usr/bin/env zsh

# Path to your oh-my-zsh installation.
export ZSH=~/.oh-my-zsh

# Set name of the theme to load.
# Look in ~/.oh-my-zsh/themes/
# Optionally, if you set this to "random", it'll load a random theme each
# time that oh-my-zsh is loaded.
# ZSH_THEME="fino"

# Uncomment the following line to use hyphen-insensitive completion. Case
# sensitive completion must be off. _ and - will be interchangeable.
HYPHEN_INSENSITIVE="true"

# Uncomment the following line to change how often to auto-update (in days).
# export UPDATE_ZSH_DAYS=13

# Uncomment the following line to enable command auto-correction.
# ENABLE_CORRECTION="true"

# Uncomment the following line to display red dots whilst waiting for completion.
COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# The optional three formats: "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
# HIST_STAMPS="mm/dd/yyyy"

# Would you like to use another custom folder than $ZSH/custom?
# ZSH_CUSTOM=/path/to/new-custom-folderls

# Which plugins would you like to load? (plugins can be found in ~/.oh-my-zsh/plugins/*)
# Custom plugins may be added to ~/.oh-my-zsh/custom/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
plugins=(git colorize colored-man-pages github virtualenvwrapper pip python brew osx zsh-syntax-highlighting z)

# User configuration
export HOSTNAME=`hostname`
source $ZSH/oh-my-zsh.sh
echo "Welcome, Diego"
setopt GLOB_COMPLETE
setopt auto_cd
setopt histignoredups
setopt autonamedirs

# The following is taken pretty much directly from fino theme,
# but I wanted to make a few tweaks.
export VIRTUAL_ENV_DISABLE_PROMPT=1
function prompt_char {
  git branch >/dev/null 2>/dev/null && echo "±" && return
  echo '○'
}

function box_name {
    [ -f ~/.box-name ] && cat ~/.box-name || echo ${SHORT_HOST:-$HOST}
}

function virtualenv_info {
	[ -n "$VIRTUAL_ENV" ] && echo "%{$FG[239]%} env %{$reset_color%}[`basename $VIRTUAL_ENV`]"
}
local current_dir='${PWD/#$HOME/~}'
local git_info='$(git_prompt_info)'
local prompt_char='$(prompt_char)'
local venv_info='$(virtualenv_info)'

NEWLINE=$'\n'

if [ -z "$INSIDE_EMACS" ];then
	PROMPT="╭─%{$FG[010]%}%n%{$reset_color%} %{$FG[239]%}at%{$reset_color%} %{$FG[012]%}$(box_name)%{$reset_color%} %{$FG[239]%}in%{$reset_color%} %{$terminfo[bold]$FG[009]%}%~%{$reset_color%}${git_info}${venv_info}${NEWLINE}╰─${prompt_char}%{$reset_color%} "
	ZSH_THEME_GIT_PROMPT_PREFIX=" %{$FG[239]%}on%{$reset_color%} %{$fg[255]%}"
	ZSH_THEME_GIT_PROMPT_SUFFIX="%{$reset_color%}"
	ZSH_THEME_GIT_PROMPT_DIRTY="%{$FG[009]%}✘"
	ZSH_THEME_GIT_PROMPT_CLEAN="%{$FG[010]%}✔"
else
	# PROMPT="╭─%{$FG[032]%}%n%{$reset_color%} %{$FG[239]%}at%{$reset_color%} %{$FG[006]%}$(box_name)%{$reset_color%} %{$FG[239]%}in%{$reset_color%} %{$terminfo[bold]$FG[035]%}${current_dir}%{$reset_color%}${git_info}${venv_info}${NEWLINE}╰─${prompt_char}%{$reset_color%} "
	PROMPT="$FG[035]%}${current_dir}%{$reset_color%} >> "
	ZSH_THEME_GIT_PROMPT_PREFIX=" %{$FG[239]%}on%{$reset_color%} %{$fg[255]%}"
	ZSH_THEME_GIT_PROMPT_SUFFIX="%{$reset_color%}"
	ZSH_THEME_GIT_PROMPT_DIRTY="%{$FG[009]%}✘"
	ZSH_THEME_GIT_PROMPT_CLEAN="%{$FG[010]%}✔"
	export TERM=xterm-256color
fi


eval $(thefuck --alias)

# You may need to manually set your language environment
# export LANG=en_US.UTF-8

# Preferred editor for local and remote sessions
if [[ -n $SSH_CONNECTION ]]; then
	export EDITOR='vim'
else
	export EDITOR="emacsclient" # Set emacs as default editor
	export ALTERNATE_EDITOR="vim"
fi

kwm="koekeishiya/kwm/kwm"
khd="koekeishiya/khd/khd"
# Compilation flags
# export ARCHFLAGS="-arch x86_64"

# ssh
# export SSH_KEY_PATH="~/.ssh/dsa_id"

# Set personal aliases, overriding those provided by oh-my-zsh libs,
# plugins, and themes. Aliases can be placed here, though oh-my-zsh
# users are encouraged to define aliases within the ZSH_CUSTOM folder.
# For a full list of active aliases, run `alias`.
alias apps="cd /Applications"
alias cask="brew cask"
alias config="$EDITOR ~/dotfiles/config/emacs.d/config.org"
alias def='dict -d gcide'
alias desk="cd /Users/diego/Desktop"
alias docs="cd /Users/diego/Documents/"
alias down="cd /Users/diego/Downloads/"
alias drive="cd /Users/diego/Google\ Drive"
alias drop="cd /Users/diego/Dropbox\ \(MIT\)"
alias edit="emacsclient"
alias editv="emacsclient -t"
alias f='find . -iname'
alias fd='find . -type d -iname'
alias ff='find . -type f -iname'
alias filecount="ls -1 | wc -l"
alias git=hub
alias ls='ls -NX --group-directories-first --color=always'
alias lst="ls -t"
alias math='/Applications/Mathematica.app/Contents/MacOS/WolframKernel'
alias pep8="pep8 --first --ignore=E129,W503,E226"
alias piphere="pip install --target=./"
alias printers="lpstat -p | awk '{print $2}'"
alias resetb="source ~/.zshrc"
alias resetwifi="networksetup -setairportpower en0 off; sleep 2; networksetup -setairportpower en0 on" 
alias run="python3"			  # I got super used to just tying 'run' in iPython
alias starwars="telnet towel.blinkenlights.nl" # heh 
alias sudo='sudo '							   # recognize aliases 
alias sz="du -hs"							   # get folder/file size 
alias zshrc="$EDITOR ~/dotfiles/config/zshrc" 
alias vimrc="$ALTERNATE_EDITOR ~/dotfiles/config/vimrc"
alias rainbowstream='$HOME/.virtualenvs/py3/bin/rainbowstream'
export LS_COLORS=$LS_COLORS:'di=0;36:ex=0;35:ln=1;31' # ls colors i've gotten used to
zstyle ':completion:*' list-colors 'di=0;36:ex=0;35:ln=1;31'

py2() {
	workon py2
	export PYTHONSTARTUP=/Users/diego/.virtualenvs/py2/bin/.pythonrc.py
	alias run="python2"
}

out() {
	deactivate
	export PYTHONSTARTUP=$HOME/.pythonrc.py
	alias run="python3"
}

athena(){
	echo -n "Username: "
	read username
	ssh -Y "$username@athena.dialup.mit.edu"
}

# Make a file executable
mkexec(){
    chmod a+x "$@"
}

# Create/edit executable python script
pythonexec(){
    touch "$*"
    echo '#!/usr/local/bin/python3' | cat - "$*" > temp && mv temp "$*"
    sudo chmod a+x "$*"
    emacsclient "$*"
}

# Create/edit python script
pythonscript(){
    touch "$*"
    echo '#!/usr/local/bin/python3' | cat - "$*" > temp && mv temp "$*"
    emacsclient "$*"
}

# View only mode in emacs
ev() {
    emacsclient --eval "(find-file-read-only \"$1\")"
}

# Edit Python 3 files
bam(){
    emacsclient "$1" --eval '(and (split-window-right) (windmove-right))' -f ipython --eval '(windmove-left)'
}

# Edit Python 2 files
ham(){
    emacsclient "$1" --eval '(and (split-window-right) (windmove-right))' -f ipython2 --eval '(windmove-left)'
}


pdftif() {
	gs -dNOPAUSE -q -r500 -sDEVICE=tiffg4 -dBATCH -dFirstPage=$2 -dLastPage=$3 -sOutputFile=$4 $1
}

ocrpdf(){
	echo "Converting pdf to png..."
	gs -dNOPAUSE -q -r500 -sDEVICE=tiffg4 -dBATCH -sOutputFile=$TMPDIR/tempocr.tif $1
	echo "Running tesseract on pngs..."
	tesseract $TMPDIR/tempocr.tif $2 >/dev/null 2>&1
}

ocrpdf2(){
	echo "Converting pdf to png..."
	convert -density 500 $1 $TMPDIR/tempocr.png
	count=0
	echo "Running tesseract on pngs..."
	while [ -f $TMPDIR/tempocr-$count.png ]; do
		echo "    Page $count"
		tesseract $TMPDIR/tempocr-$count.png $TMPDIR/tempocr >/dev/null 2>&1
		cat $TMPDIR/tempocr.txt >> $2
		let count=count+1
	done
	echo "Created output file $2"
}

psetzip (){
	zip -r "$1".zip $1 -x '*.git*' -x '*.ipynb_checkpoints*' -x '*.pyc*' -x '*.DS_Store*' -x '*~*' -x "*__pycache__*" 
}

calc(){
	emacs --batch --eval "(message (calc-eval \"$1\"))"
}


export WWW_HOME='http://google.com'

fpath=(/usr/local/share/zsh-completions $fpath)

source "/usr/local/bin/virtualenvwrapper.sh"
export PYTHONSTARTUP=$HOME/.pythonrc.py

source /usr/local/share/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh
ZSH_HIGHLIGHT_STYLES[globbing]='fg=208'
ZSH_HIGHLIGHT_STYLES[command]='fg=010'
ZSH_HIGHLIGHT_STYLES[alias]='fg=010'
ZSH_HIGHLIGHT_STYLES[builtin]='fg=010'
ZSH_HIGHLIGHT_STYLES[function]='fg=010'


source /usr/local/share/zsh-autosuggestions/zsh-autosuggestions.zsh

export RTV_EDITOR='vim'
export RTV_URLVIEWER='urlview'

export PATH="$HOME/bin:/usr/local/sbin:/usr/local/opt/coreutils/libexec/gnubin:$PATH"
export MANPATH="/usr/local/opt/coreutils/libexec/gnuman:$MANPATH"
