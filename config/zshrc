#!/usr/bin/env zsh

# terminal.app used to get confused, so this was added
export HOSTNAME=`hostname`


# ------------------------------------
# Source Prezto
# ------------------------------------
if [[ -s "${ZDOTDIR:-$HOME}/.zprezto/init.zsh" ]]; then
  source "${ZDOTDIR:-$HOME}/.zprezto/init.zsh"
fi

# Undo some prezto defaults
unalias rm

# ------------------------------------
# zsh opts
# ------------------------------------
setopt GLOB_COMPLETE
setopt auto_cd
setopt histignoredups
setopt autonamedirs
setopt clobber
unsetopt correct
setopt complete_aliases


# ------------------------------------
# Initalize and source some more stuff
# ------------------------------------

# z plugin
source `brew --prefix`/etc/profile.d/z.sh

# fuck!
if which thefuck > /dev/null; then eval $(thefuck --alias); fi

# pyenv
if which pyenv > /dev/null; then eval "$(pyenv init -)"; fi
if which pyenv-virtualenv-init > /dev/null; then eval "$(pyenv virtualenv-init -)"; fi

# syntax highlighting
source /usr/local/share/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh
ZSH_HIGHLIGHT_STYLES[globbing]='fg=208'
ZSH_HIGHLIGHT_STYLES[command]='fg=010'
ZSH_HIGHLIGHT_STYLES[alias]='fg=010'
ZSH_HIGHLIGHT_STYLES[builtin]='fg=010'
ZSH_HIGHLIGHT_STYLES[function]='fg=010'

# auto suggestions
source /usr/local/share/zsh-autosuggestions/zsh-autosuggestions.zsh

zstyle ':completion:*' list-colors 'di=0;36:ex=0;35:ln=1;31'


# ------------------------------------
# Vars
# ------------------------------------

# some ls colors i've gotten used to
export LS_COLORS=$LS_COLORS:'di=0;36:ex=0;35:ln=1;31'

# kwm/khd
kwm="koekeishiya/kwm/kwm"
khd="koekeishiya/khd/khd"

# Emacs
export switchmacs="emacs"

# Python
export python3version=3.6.0
export python2version=2.7.13
export PYTHONSTARTUP=$HOME/.pythonrc.py

export WWW_HOME='http://google.com'
export RTV_EDITOR='vim'
export RTV_URLVIEWER='urlview'

# Preferred editor for local and remote sessions
if [[ -n $SSH_CONNECTION ]]; then
	export EDITOR='vim'
else
	export EDITOR="emacsclient -n" # Set emacs as default editor
	export ALTERNATE_EDITOR="vim"
fi

# export GIT_PAGER=less

# ------------------------------------
# Aliases
# ------------------------------------
alias apps="cd /Applications"
alias cask="brew cask"
alias config="$EDITOR ~/dotfiles/config/emacs.d/config.org"
alias def='dict -d gcide'
alias desk="cd /Users/diego/Desktop"
alias docs="cd /Users/diego/Documents/"
alias down="cd /Users/diego/Downloads/"
alias drive="cd /Users/diego/Google\ Drive"
alias drop="cd /Users/diego/Dropbox\ \(MIT\)"
alias ed="ed -p:"
alias edit="emacsclient -n"
alias editv="emacsclient -t"
alias filecount="ls -1 | wc -l"
if which hub > /dev/null; then alias git=hub; fi
alias startkwm="brew services start $kwm"
alias stopkwm="brew services stop $kwm"
alias restartkwm="brew services restart $kwm"
alias startkhd="brew services start $khd"
alias stopkhd="brew services stop $khd"
alias restartkhd="brew services restart $khd"
alias ls='ls -NX --group-directories-first --color=always'
alias lst="ls -t"
alias math='/Applications/Mathematica.app/Contents/MacOS/WolframKernel'
alias pep8="pep8 --first --ignore=E129,W503,E226"
alias piphere="pip install --target=./"
alias printers="lpstat -p | awk '{print $2}'"
alias resetb="source ~/.zshrc"
alias resetwifi="networksetup -setairportpower en0 off; sleep 2;"\
"networksetup -setairportpower en0 on"
alias rg="rg -i"
alias sm=". ~/dotfiles/bin/switchmacs"
alias starwars="telnet towel.blinkenlights.nl" # heh
alias sudo='sudo '							   # recognize aliases
alias sz="du -hs"							   # get folder/file size
alias zshrc="$EDITOR ~/dotfiles/config/zshrc"
alias vimrc="$ALTERNATE_EDITOR ~/dotfiles/config/vimrc"


# ------------------------------------
# Functions
# ------------------------------------
ff(){
    find . -type f -iname *"$1"*
}

fd(){
    find . -type d -iname *"$1"*
}

f(){
    find . -iname *"$1"*
}

pip-fromfile() {
	<$1 xargs pip install
}

athena(){
	echo -n "Username: "
	read username
	ssh -Y "$username@athena.dialup.mit.edu"
}

mkexec(){
    chmod a+x "$@"
}

pythonexec(){
    touch "$*"
    echo '#!/usr/local/bin/python3' | cat - "$*" > temp && mv temp "$*"
    sudo chmod a+x "$*"
    emacsclient -n "$*"
}

# Create/edit python script
pythonscript(){
    touch "$*"
    echo '#!/usr/local/bin/python3' | cat - "$*" > temp && mv temp "$*"
    emacsclient -n "$*"
}

# View only mode in emacs
ev() {
    emacsclient -n --eval "(find-file-read-only \"$1\")"
}

# Edit Python 3 files
bam(){
    emacsclient -n "$1" \
				--eval '(and (split-window-right) (windmove-right))' \
				-f ipython \
				--eval '(windmove-left)'
}

# Edit Python 2 files
ham(){
    emacsclient -n "$1" \
				--eval '(and (split-window-right) (windmove-right))' \
				-f ipython2 \
				--eval '(windmove-left)'
}

pdftif() {
	\gs -dNOPAUSE -q -r500 \
	   -sDEVICE=tiffg4 \
	   -dBATCH \
	   -dFirstPage=$2 \
	   -dLastPage=$3 \
	   -sOutputFile=$4 \
	   $1
}

ocrpdf(){
	echo "Converting pdf to png..."
	\gs -dNOPAUSE -q -r500 \
	   -sDEVICE=tiffg4 \
	   -dBATCH \
	   -sOutputFile=$TMPDIR/tempocr.tif \
	   $1
	echo "Running tesseract on pngs..."
	tesseract $TMPDIR/tempocr.tif $2 >/dev/null 2>&1
}

ocrpdf2(){
	echo "Converting pdf to png..."
	convert -density 500 $1 $TMPDIR/tempocr.png
	count=0
	echo "Running tesseract on pngs..."
	while [ -f $TMPDIR/tempocr-$count.png ]; do
		echo "    Page $count"
		tesseract $TMPDIR/tempocr-$count.png $TMPDIR/tempocr >/dev/null 2>&1
		cat $TMPDIR/tempocr.txt >> $2
		let count=count+1
	done
	echo "Created output file $2"
}

psetzip (){
	zip -r "$1".zip $1\
		-x '*.git*' \
		-x '*.ipynb_checkpoints*' \
		-x '*.pyc*' \
		-x '*.DS_Store*' \
		-x '*~*' \
		-x "*__pycache__*"
}

calc(){
	emacs --batch --eval "(message (calc-eval \"$1\"))"
}

spectrum_ls() {
  for code in {000..255}; do
    print -P -- "$code: %F{$code}Test%f"
  done
}

# ------------------------------------
# Some path stuff
# ------------------------------------
fpath=(/usr/local/share/zsh-completions $fpath)

export PATH="$HOME/bin:/usr/local/sbin:"\
"$(brew --prefix coreutils)/libexec/gnubin:$PATH"
typeset -U path
export MANPATH="$(brew --prefix coreutils)/libexec/gnuman:$MANPATH"
